"function timestamp2dt(t){"
	"return new Date(t*1000).toISOString().slice(-24, -5)"
"}"
"function wipe_table(selector){"
	"$(selector + \" tr\").remove();"
"}"
"function populate_t_id2name_table(url, selector){"
	"$.ajax({"
		"dataType: \"json\","
		"url: url,"
		"success: function(data){"
			"var s = \"\";"
			"for (const [id, name] of Object.entries(data)){"
				"s += \"<div class='tr'>\";"
				"s += \"<div class='td'><a href='/t#\" + id + \"'>\" + name + \"</a></div>\";"
				"s += \"</div>\";"
			"}"
			"$(selector).html(s);"
		"},"
		"error: function(){"
			"alert(\"Error populating table\");"
		"}"
	"});"
"}"
"function populate_t_table(url, selector){"
	"$.ajax({"
		"dataType: \"json\","
		"url: url,"
		"success: function(data){"
			"var s = \"\";"
			"for (var tagid of data){"
				"s += \"<div class='tr'>\";"
				"s += \"<div class='td'>\" + tagid + \"</div>\";"
				"s += \"</div>\";"
			"}"
			"$(selector).html(s);"
			"column_id2name('/a/t.json', selector, '/t#', 0);"
		"},"
		"error: function(){"
			"alert(\"Error populating table\");"
		"}"
	"});"
"}"
"function set_dir_name_from_id(id, selector){"
	"$.ajax({"
		"dataType: \"json\","
		"url: '/a/d.json',"
		"success: function(data){"
			"dir_name = data[id][0];"
			"device_id = data[id][1];"
			"$(selector).text(dir_name);"
		"},"
		"error: function(){"
			"alert(\"Error setting dir name from ID\");"
		"}"
	"});"
"}"
"function set_tag_name_from_id(id, selector){"
	"$.ajax({"
		"dataType: \"json\","
		"url: '/a/t.json',"
		"success: function(data){"
			"tag_name = data[id][0];"
			"$(selector).text(tag_name);"
		"},"
		"error: function(){"
			"alert(\"Error setting tag name from ID\");"
		"}"
	"});"
"}"
"function display_parent_dirs(dir_id, selector){"
	"$.ajax({"
		"dataType: \"json\","
		"url: '/a/d.json',"
		"success: function(data){"
			"dir_name = data[dir_id][0];"
			"const dir_name2id = Object.keys(data).reduce(function(obj, key){"
				"obj[data[key][0]] = key;"
				"return obj;"
			"}, {});"
			"var pth = \"\";"
			"const arr = dir_name.split(\"/\").map(x => pth+=x+\"/\").map(x => dir_name2id[x])"
				".filter(x => x)" // Removes undefined elements
				".map(x => \"<a href='/d#\" + x + \"'>\" + data[x][0] + \"</a>\")"
			";"
			"arr.pop();" // Remove last element, which is the current directory
			"$(selector).html(arr.join(\"<br/>\"));"
		"},"
		"error: function(){"
			"alert(\"Error setting dir name from ID\");"
		"}"
	"});"
"}"

"function populate_d_id2name_table(url, selector){"
	"$.ajax({"
		"dataType: \"json\","
		"url: url,"
		"success: function(data){"
			"var s = \"\";"
			"for (const [id, ls] of Object.entries(data)){"
				"s += \"<div class='tr'>\";"
				"s += \"<div class='td'><a href='/d#\" + id + \"'>\" + ls[0] + \"</a></div>\";"
				"s += \"<div class='td'><a href='/D#\" + ls[1] + \"'>\" + \"Device\" + \"</a></div>\";"
				"s += \"</div>\";"
			"}"
			"$(selector).html(s);"
		"},"
		"error: function(){"
			"alert(\"Error populating table\");"
		"}"
	"});"
"}"
"function populate_f_table(url, selector){"
	"$.ajax({"
		"dataType: \"json\","
		"url: url,"
		"success: function(data){"
			"var s = \"\";"
			"for (var ls of data){"
				"s += \"<div class='tr' data-id='\" + ls[1] + \"'>\";"
					"s += \"<div class='td'><img src='/i/f/\" + ls[0] + \"'></img></div>\";"
					//"s += \"<td><a href='/d#\" + ls[1] + \"'>\" + ls[2] + \"</a></td>\";" // Dir  ID and name
					"s += \"<div class='td fname'><a href='/f#\" + ls[1] + \"'>\" + ls[2] + \"</a></div>\";" // File ID and name
					"s += \"<div class='td'>\" + ls[3] + \"</div>\";"
					
				"s += \"</div>\";"
			"}"
			"$(selector).html(s);"
			"column_id2name(\"/a/t.json\", selector, '/t#', 2);"
		"},"
		"error: function(){"
			"alert(\"Error populating table\");"
		"}"
	"});"
"}"
"function populate_str(url, selector, postfnct){"
	"$.ajax({"
		"dataType: \"json\","
		"url: url,"
		"success: function(data){"
			"$(selector).html(data.join(\",\"));"
			"if (postfnct !== undefined){"
				"postfnct();"
			"}"
		"},"
		"error: function(){"
			"alert(\"Error populating string\");"
		"}"
	"});"
"}"
"function column_from_timestamp(selector, timestamp_indx){"
	"$(selector).find('.tr').each(function (i, el){"
		"var $tds = $(this).find('.td');"
		"var $link = $tds.eq(timestamp_indx);"
		"$link.value = $link.text();"
		"$link.text(timestamp2dt($link.value));"
	"});"
"}"
"function sub_into(data, node, href_prefix){"
	"var s = \"\";"
	"for (var tagid of node.text().split(\",\")){"
		"s += \"<a href='\" + href_prefix + tagid + \"'>\" + data[tagid] + \"</a> \";"
	"}"
	"node.html(s);"
"}"
"function column_id2name(url, selector, href_prefix, col){"
	"$.ajax({"
		"dataType: \"json\","
		"url: url,"
		"success: function(data){"
			"if (col === undefined){"
				"sub_into(data, $(selector), href_prefix);"
			"} else {"
				"$(selector).find('.tr').each(function (i, el){"
					"var $tds = $(this).find('.td');"
					"sub_into(data, $tds.eq(col), href_prefix);"
				"});"
			"}"
		"},"
		"error: function(){"
			"alert(\"Error populating table\");"
		"}"
	"});"
"}"
"function set_embed_html(selector, device_id, dir_name, file_name){"
	"$.ajax({"
		"dataType: \"json\","
		"url: \"/a/D.json\","
		"success: function(data){"
			"const embed_pre = data[device_id][2];"
			"if (embed_pre === \"\"){"
				
				"var src;"
				"if (dir_name.startsWith(\"/\")){"
					"src = \"/S/f/\" + file_id;"
				"} else {"
					"src = dir_name + file_name;"
				"}"
				
				"if (/.(jpe?g|png|gif)$/.exec(file_name) !== null){"
					"$(selector).html(\"<img src='\" + src + \"'></img>\");"
				"} else {"
					"$(selector).html(\"<video controls><source type='\" + mimetype + \"' src='\" + src + \"'></source></video>\");"
				"}"
				
				"$(selector).attr(\"onclick\", \"\");"
			"} else {"
				"$(selector).html(embed_pre + file_name + data[device_id][3]);"
			"}"
		"},"
		"error: function(){"
			"alert(\"Error retrieving device's embed code\");"
		"}"
	"});"
"}"
"function tag_files(file_ids, tagselect){"
	"$.post({"
		"url: \"/f/t/\" + file_ids + \"/\" + tagselect.val().join(\",\"),"
		"success: function(){"
			"tagselect.val(\"\").change();" // Deselect all
		"},"
		"error: function(){"
			"alert(\"Error tagging file\");"
		"}"
	"});"
"}"
"function populate_tagselect(tagselect){"
	"$.ajax({"
		"dataType: \"json\","
		"url: \"/a/t.json\","
		"success: function(data){"
			"var s = \"\";"
			"for (const [id, name] of Object.entries(data)){"
				"s += \"<option value='\" + id + \"'>\" + name + \"</option>\";"
			"}"
			"tagselect.html(s);"
			"tagselect.select2();" // Initialise it
		"},"
		"error: function(){"
			"alert(\"Error populating table\");"
		"}"
	"});"
"}"
"function toggle_row_selected(tr){"
	"if (tr.classList.contains(\"selected\")){"
		"tr.classList.remove(\"selected\");"
	"} else {"
		"tr.classList.add(\"selected\");"
	"}"
"}"
"function fancify_tbl(selector){"
	// WARNING: Ensure selector is only for tbody
	"document.querySelector(selector).addEventListener(\"click\", function(e){"
		"var tgt = e.target;"
		
		// Climb the node tree until reach a row (success) - or the body itself (failure)
		"while (tgt !== this  &&  !tgt.classList.contains(\"tr\")) {"
			"tgt = tgt.parentNode;"
		"}"
		
		"if (tgt === this){"
			"alert(\"No table cell found\");"
		"} else {"
			"toggle_row_selected(tgt);"
		"}"
	"});"
"}"
"function filter_tbl(selector, name_col_ids, tags_col_id){"
	"const tbl = document.querySelector(selector);"
	"const headers = tbl.getElementsByClassName('th');"
	
	"var name_regexps = [];"
	"for (const name_col_id of name_col_ids){"
		"const s = (name_col_id === undefined) ? '' : headers[name_col_id].getElementsByTagName('input')[0].value;"
		"name_regexps.push([(s === '') ? undefined : new RegExp(s),  name_col_id]);"
	"}"
	"const tags_regexp_str = (tags_col_id === undefined) ? '' : headers[tags_col_id].getElementsByTagName('input')[0].value;"
	
	"var tags_regexp;"
	"if (tags_regexp_str !== ''){"
		"tags_regexp = new RegExp(tags_regexp_str);"
	"}"
	
	"row_loop: "
	"for (const row of tbl.getElementsByClassName('tbody')[0].getElementsByClassName('tr')){"
		"const cols = row.getElementsByClassName('td');"
		
		"for (const [name_regexp, name_col_id] of name_regexps){"
			"if (name_regexp !== undefined){"
				"const name = cols[name_col_id].textContent;"
				"if (!(name_regexp.test(name))){"
					"row.classList.add('hidden');"
					"continue row_loop;"
				"}"
			"}"
		"}"
		
		"if (tags_regexp !== undefined){"
			"const tags = Array.prototype.slice.call(cols[tags_col_id].getElementsByTagName('a')).map(x => x.textContent).join('\\n');"
			"if (!(tags_regexp.test(tags))){"
				"row.classList.add('hidden');"
				"continue;"
			"}"
		"}"
		
		"row.classList.remove('hidden');"
	"}"
"}"
"function filter_f_tbl(selector){"
	"filter_tbl(selector, [1], 2);"
"}"
"function filter_d_tbl(selector){"
	"filter_tbl(selector, [0,1]);"
"}"


"function getCellValue(tr, idx){"
	"return tr.children[idx].getAttribute('value') || tr.children[idx].innerText || tr.children[idx].textContent"
"}"

"const comparer = (idx, asc) => (a, b) => ("
	"(v1, v2) => "
	"v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)"
")(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));"

"function init_tbls(){"
	"$(\".th\").each(function(i,el){el.addEventListener(\"click\", function(){"
		"const tbl = el.parentNode.parentNode.parentNode.getElementsByClassName(\"tbody\")[0];" // th < tr < thead < table
		"Array.from(tbl.querySelectorAll('.tr:nth-child(n+1)'))"
			".sort(comparer(Array.from(el.parentNode.children).indexOf(el), this.asc = !this.asc))"
			".forEach(tr => tbl.appendChild(tr) );"
	"})})"
"}"

"window.addEventListener(\"load\", function(){"
	"init_tbls();"
"}, false);"
