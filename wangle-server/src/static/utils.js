"function timestamp2dt(t){"
	"return new Date(t*1000).toISOString().slice(-24, -5)"
"}"
"function wipe_table(selector){"
	"$(selector + \" tr\").remove();"
"}"
"function populate_t_id2name_table(url, selector){"
	"$.ajax({"
		"dataType: \"json\","
		"url: url,"
		"success: function(data){"
			"var s = \"\";"
			"for (const [id, name] of Object.entries(data)){"
				"s += \"<tr>\";"
				"s += \"<td><a href='/t#\" + id + \"'>\" + name + \"</a></td>\";"
				"s += \"</tr>\";"
			"}"
			"$(selector).html(s);"
		"},"
		"error: function(){"
			"alert(\"Error populating table\");"
		"}"
	"});"
"}"
"function populate_t_table(url, selector){"
	"$.ajax({"
		"dataType: \"json\","
		"url: url,"
		"success: function(data){"
			"var s = \"\";"
			"for (var tagid of data){"
				"s += \"<tr>\";"
				"s += \"<td>\" + tagid + \"</td>\";"
				"s += \"</tr>\";"
			"}"
			"$(selector).html(s);"
			"column_id2name('/a/t.json', selector, '/t#', 0);"
		"},"
		"error: function(){"
			"alert(\"Error populating table\");"
		"}"
	"});"
"}"
"function populate_f_table(url, selector){"
	"$.ajax({"
		"dataType: \"json\","
		"url: url,"
		"success: function(data){"
			"var s = \"\";"
			"for (var ls of data){"
				"s += \"<tr>\";"
					"s += \"<td><img src='/i/f/\" + ls[0] + \"'></img>\";"
					//"s += \"<td><a href='/d#\" + ls[1] + \"'>\" + ls[2] + \"</a></td>\";" // Dir  ID and name
					"s += \"<td><a href='/f#\" + ls[1] + \"'>\" + ls[2] + \"</a></td>\";" // File ID and name
					"s += \"<td>\" + ls[3] + \"</td>\";"
					
				"s += \"</tr>\";"
			"}"
			"$(selector).html(s);"
			"column_id2name(\"/a/t.json\", selector, '/t#', 2);"
		"},"
		"error: function(){"
			"alert(\"Error populating table\");"
		"}"
	"});"
"}"
"function populate_str(url, selector, postfnct){"
	"$.ajax({"
		"dataType: \"json\","
		"url: url,"
		"success: function(data){"
			"$(selector).html(data.join(\",\"));"
			"if (postfnct !== undefined){"
				"postfnct();"
			"}"
		"},"
		"error: function(){"
			"alert(\"Error populating string\");"
		"}"
	"});"
"}"
"function column_from_timestamp(selector, timestamp_indx){"
	"$(selector).find('tr').each(function (i, el){"
		"var $tds = $(this).find('td');"
		"var $link = $tds.eq(timestamp_indx);"
		"$link.value = $link.text();"
		"$link.text(timestamp2dt($link.value));"
	"});"
"}"
"function sub_into(data, node, href_prefix){"
	"var s = \"\";"
	"for (var tagid of node.text().split(\",\")){"
		"s += \"<a href='\" + href_prefix + tagid + \"'>\" + data[tagid] + \"</a> \";"
	"}"
	"node.html(s);"
"}"
"function column_id2name(url, selector, href_prefix, col){"
	"$.ajax({"
		"dataType: \"json\","
		"url: url,"
		"success: function(data){"
			"if (col === undefined){"
				"sub_into(data, $(selector), href_prefix);"
			"} else {"
				"$(selector).find('tr').each(function (i, el){"
					"var $tds = $(this).find('td');"
					"sub_into(data, $tds.eq(col), href_prefix);"
				"});"
			"}"
		"},"
		"error: function(){"
			"alert(\"Error populating table\");"
		"}"
	"});"
"}"

"function getCellValue(tr, idx){"
	"return tr.children[idx].getAttribute('value') || tr.children[idx].innerText || tr.children[idx].textContent"
"}"

"const comparer = (idx, asc) => (a, b) => ("
	"(v1, v2) => "
	"v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)"
")(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));"

"function init_tbls(){"
	"$(\"th\").each(function(i,el){el.addEventListener(\"click\", function(){"
		"const tbl = el.parentNode.parentNode.parentNode.getElementsByTagName(\"tbody\")[0];" // th < tr < thead < table
		"Array.from(tbl.querySelectorAll('tr:nth-child(n+1)'))"
			".sort(comparer(Array.from(el.parentNode.children).indexOf(el), this.asc = !this.asc))"
			".forEach(tr => tbl.appendChild(tr) );"
	"})})"
"}"

"window.addEventListener(\"load\", function(){"
	"init_tbls();"
"}, false);"
