#!/bin/bash


# This is a pipeline used to push playlists to Android VLC
# It is obsolete as of now, but easily updatable.



PLAYLIST_DIR=/tmp/playlists
DEST_DIR=/storage/6332-3131/music/tagem/
DEST_PLAYLIST_DIR=/storage/6332-3131/music/tagem-playlists
FPS_FILE_BASENAME=fps
FPS_FILE_EXT=.txt
FPS_FILE_DIR=/tmp
fps_file="$FPS_FILE_DIR/$FPS_FILE_BASENAME$FPS_FILE_EXT"


find "$PLAYLIST_DIR" -type f -name '*.m3u' -exec rm {} \;
mkdir "$PLAYLIST_DIR"


rule2='Best Tag2'
rule3='Best Tag3'
ruleABCDE='Best Tag A With Var B or C between D and E'
X=Music \
tagem-mk-playlist \
-b \
\
-p "$DEST_DIR" \
"$PLAYLIST_DIR" .m3u \
-- 'Best Tag1' all \
\
-- B=TV "$rule2" s_TV \
-- B='Video Game' "$rule2" s_VideoGame \
-- B=Film "$rule2" s_film \
\
-- B=Happy "$rule2" m_happy \
-- B=Sad "$rule2" m_sad \
-- B=Inspiring "$rule2" m_inspiring \
-- B=Romantic "$rule2" m_romantic \
-- B=Nostalgic "$rule2" m_nostalgic \
-- B=Forboding "$rule2" m_forboding \
-- B=Funny "$rule2" m_funny \
\
-- B=Happy C='German (Language)' "$rule3" ml_happy_german \
-- B=Sad   C='German (Language)' "$rule3" ml_sad_german \
\
-- B=Scottish "$rule2" n_scottish \
\
-- B='Alexa Feser' "$rule2" U_AlexaFeser \
-- B=AlexiBexi "$rule2" U_AlexiBexi \
-- B='Adel Tawil' "$rule2" U_AdelTawil \
-- B='Avril Lavigne' "$rule2" U_AvrilLavigne \
-- B='Billy Joel' "$rule2" U_BillyJoel \
-- B='Britney Spears' "$rule2" U_BritneySpears \
-- B='Christina Stuermer' "$rule2" U_ChristinaStuermer \
-- B='Corb Lund' "$rule2" U_CorbLund \
-- B='Ellie Goulding' "$rule2" U_EllieGoulding \
-- B='Helene Fischer' "$rule2" U_HeleneFischer \
-- B='John McDermott' "$rule2" U_JohnMcDermott \
-- B='Peter Hollens' "$rule2" U_PeterHollens \
-- B=Yiruma "$rule2" U_Yiruma \
\
-- B=Avicii "$rule2" UU_Avicii \
-- B='Celtic Thunder' "$rule2" UU_CelticThunder \
-- B='Santiano' "$rule2" UU_Santiano \
-- B='Era (Singer Band)' "$rule2" UU_Era \
-- B='Sabaton' "$rule2" UU_Sabaton \
-- B='Globus (Singers)' "$rule2" UU_Globus \
-- B='Mike Oldfield' "$rule2" UU_MikeOldfield \
\
-- B='Endless Space (Video Game)' "$rule2" UUU_EndlessSpace \
-- B='War of the Worlds' "$rule2" UUU_WarOfTheWorlds \
-- B='Les Miserables' "$rule2" UUU_LesMis \
-- B='Harry Potter (Franchise)' "$rule2" UUU_HarryPotter \
-- B='Middle Earth' "$rule2" UUU_MiddleEarth \
-- B='Star Trek' "$rule2" UUU_StarTrek \
-- B='Sword of the Stars' "$rule2" UUU_SotS \
-- B='Civilization (Franchise)' "$rule2" UUU_Civ \
\
-- B='Adrian von Ziegler' "$rule2" UUUU_AdrianVonZiegler \
-- B=Audiomachine "$rule2" UUUU_Audiomachine \
-- B='Bear McCreary' "$rule2" UUUU_BearMcCreary \
-- B='Cephei Epic Music Empire' "$rule2" UUUU_Cephei \
-- B='Christopher Tin' "$rule2" UUUU_ChristopherTin \
-- B=Dav_Inver "$rule2" UUUU_DavInver \
-- B='Ivan Torrent' "$rule2" UUUU_IvanTorrent \
-- B='Jan Hammer' "$rule2" UUUU_JanHammer \
-- B='Sheet Music Boss' "$rule2" UUUU_SheetMusicBoss \
-- B='Thomas Bergersen' "$rule2" UUUU_ThomasBergersen \
\
-- B='Musical Instrument' "$rule2" i_instrumental \
-- B=Violin "$rule2" i_violin \
-- B=Guitar "$rule2" i_guitar \
-- B='Organ (Instrument)' "$rule2" i_organ \
-- B=Bagpipes "$rule2" i_bagpipes \
-- B=Piano "$rule2" i_piano \
-- B='A Capella Cover' "$rule2" i_acapella \
-- B='Orchestral Music' "$rule2" i_orchestral \
\
-- B='Piano Cover'   "$rule2" ii_piano  \
-- B='Violin Cover'  "$rule2" ii_violin \
-- B='Guitar Cover'  "$rule2" ii_guitar \
\
-- B='Film Score' "$rule2" g_film_score \
-- B='Pop Music' "$rule2" g_pop \
\
-- B='Chinese Language' "$rule2" l_chinese \
-- B='English Language' "$rule2" l_english \
-- B='French Language'  "$rule2" l_french \
-- B='German Language'  "$rule2" l_german \
-- B='Italian Language' "$rule2" l_italian \
-- B='Russian Language' "$rule2" l_russian \
-- B=Latin "$rule2" l_latin \
\
-- B=Musicness C=Score D=96 E=100 "$ruleABCDE" 96 \
-- B=Musicness C=Score D=91 E=95  "$ruleABCDE" 91 \
-- B=Musicness C=Score D=86 E=90  "$ruleABCDE" 86 \
-- B=Musicness C=Score D=81 E=85  "$ruleABCDE" 81 \
-- B=Musicness C=Score D=76 E=80  "$ruleABCDE" 76 \
-- B=Musicness C=Score D=71 E=75  "$ruleABCDE" 71 \
-- B=Musicness C=Score D=61 E=71  "$ruleABCDE" 61 \
-- B=Musicness C=Score D=51 E=61  "$ruleABCDE" 51 \
-- B=Musicness C=Score D=41 E=51  "$ruleABCDE" 41 \
-- B=Musicness C=Score D=0  E=40  "$ruleABCDE" 0

# -c /usr/bin/echo "From" %f "to" %F '\;' \


X=Music \
tagem-mk-playlist "$FPS_FILE_DIR" "$FPS_FILE_EXT" \
-- 'Best Tag1' "$FPS_FILE_BASENAME"


for playlist_filename in $(find "$PLAYLIST_DIR" -type f -printf "%f\n"); do
	src_fp="$PLAYLIST_DIR/$playlist_filename"
	file_size="$(sha256sum "$src_fp")" # "$(stat -c %s "$src_fp")"
	dest_fp="${DEST_PLAYLIST_DIR}/${playlist_filename}"
	if [ "$file_size" = e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 ]; then
		# sha256sum of empty file
		adb shell "rm $(dblqt "$dest_fp")"
		continue
	fi
	dest_file_size="$(adb shell sha256sum "$dest_fp")" || dest_file_size=foobar # "$(adb shell stat -c %s "$dest_fp")"  ||  dest_file_size=0
	if [ "$file_size" = "$dest_file_size" ]; then
		dummy=1
	else
		adb push --sync "$src_fp" "$DEST_PLAYLIST_DIR/"
	fi
done


adb shell ls "$DEST_DIR/"  >  /tmp/adb.txt
while read fp; do
	# First, ensure all files from src are in dest
	echo "$fp"
	filename="$(basename "$fp")"
	if [ "$(grep -F "$filename" /tmp/adb.txt)" ]; then
		echo "Found:     $filename"
	else
		echo "Not Found: $filename"
		#echo "$fp" >> /tmp/__2sync.txt
		adb push --sync "$fp" "$DEST_DIR/"
	fi
done < "$fps_file"
while read filename; do
	# Finally, ensure only files from src are in dest
	echo "$filename"
	if [ "$(grep -F "$filename" "$fps_file")" ]; then
		dummy=1
	else
		echo "Additional File at Dest: $filename"
		adb shell "rm $(dblqt "$DEST_DIR/$filename")"
	fi
done < /tmp/adb.txt
